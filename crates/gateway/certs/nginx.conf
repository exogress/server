worker_processes  1;
events {
    worker_connections   2000;

    # use [ kqueue | epoll | /dev/poll | select | poll ];
    use kqueue;
}

daemon off;
error_log /dev/stdout info;

http {
    access_log /dev/stdout;
    default_type  application/octet-stream;


    log_format main      '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$gzip_ratio"';

    log_format download  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;

    gzip on;
    gzip_min_length  1100;
    gzip_buffers     4 8k;
    gzip_types       text/plain;

    output_buffers   1 32k;
    postpone_output  1460;

    sendfile         on;
    tcp_nopush       on;
    tcp_nodelay      on;
    send_lowat       12000;

    keepalive_timeout  75 20;

    #lingering_time     30;
    #lingering_timeout  10;
    #reset_timedout_connection  on;


    server {
        listen        localhost:12345 ssl;

        ssl_protocols TLSv1.1 TLSv1.2;
        # letsencrypt certificate
        ssl_certificate ./server/localhost.crt;
        ssl_certificate_key ./server/localhost.key;

        # client certificate
        ssl_client_certificate ./client/ca.crt;
        # make verification optional, so we can display a 403 message to those
        # who fail authentication
        ssl_verify_client optional_no_ca;


        location / {
            if ($ssl_client_verify !~ "SUCCESS|FAILED:self signed certificate") {
              add_header X-debug-message "$ssl_client_verify" always;
              return 403;
            }

            proxy_pass         http://192.168.71.30:3000/;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            #proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            client_max_body_size       10m;
            client_body_buffer_size    128k;
        }
    }
}
