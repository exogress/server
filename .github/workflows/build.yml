name: Build

on:
  push:
    branches:
#      - master
      - develop
  pull_request:
    branches:
#      - master
      - develop

env:
  IMAGE: servers
  IMAGE_SIGNALER: quay.io/exogress/signaler
  IMAGE_GATEWAY: quay.io/exogress/gateway
  IMAGE_ASSISTANT: quay.io/exogress/assistant
  IMAGE_DIRECTOR: quay.io/exogress/director
  IMAGE_POSTFIX: ""
  TAG: dev

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            crates/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install imagemagick
        run: apt update && apt-get install -y imagemagick pkg-config

      - name: Run cargo test
        run: cargo test
        working-directory: ./crates

  build-images:
    name: Build Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Get branch name
        #      if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Set image postfix
        run: echo "IMAGE_POSTFIX=-develop" >> $GITHUB_ENV
        if: env.BRANCH_NAME == 'develop'

      - name: Login to quay.io
        uses: docker/login-action@v1
        if: env.BRANCH_NAME == 'develop'
        with:
          registry: quay.io
          username: exogress+publisher
          password: ${{ secrets.QUAY_PASSWORD }}

      - uses: actions/cache@v2
        if: env.BRANCH_NAME == 'develop'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-toml

#      - name: Install toml
#        if: env.BRANCH_NAME == 'develop'
#        run: cargo install toml-cli
#
#      - name: Set assistant version
#        run: echo "ASSISTANT_VERSION=$(toml get crates/assistant/Cargo.toml package.version)" >> $GITHUB_ENV
#        if: env.BRANCH_NAME == 'develop'
#
#      - name: Set signaler version
#        run: echo "SIGNALER_VERSION=$(toml get crates/signaler/Cargo.toml package.version)" >> $GITHUB_ENV
#        if: env.BRANCH_NAME == 'develop'
#
#      - name: Set gateway version
#        run: echo "GATEWAY_VERSION=$(toml get crates/gateway/Cargo.toml package.version)" >> $GITHUB_ENV
#        if: env.BRANCH_NAME == 'develop'
#
#      - name: Set director version
#        run: echo "DIRECTOR_VERSION=$(toml get crates/director/Cargo.toml package.version)" >> $GITHUB_ENV
#        if: env.BRANCH_NAME == 'develop'

      - name: Build base
        if: env.BRANCH_NAME == 'develop'
        run:
          docker build --pull --target=builder -t ${IMAGE}:${TAG} .

      - name: Build signaler
        if: env.BRANCH_NAME == 'develop'
        run:
          docker build --pull --target=signaler -t ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:${TAG} .

      - name: Build director
        if: env.BRANCH_NAME == 'develop'
        run:
          docker build --pull --target=director -t ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:${TAG} .

      - name: Build gateway
        if: env.BRANCH_NAME == 'develop'
        run:
          docker build --pull --target=gateway -t ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:${TAG} .

      - name: Build assistant
        if: env.BRANCH_NAME == 'develop'
        run:
          docker build --pull --target=assistant -t ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:${TAG} .

      - name: Tag and push signaler
        if: env.BRANCH_NAME == 'develop'
        run: |
          docker tag ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:${TAG} ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:latest
          docker tag ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:${TAG} ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:${GITHUB_SHA}
          docker push ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:latest
          docker push ${IMAGE_SIGNALER}${IMAGE_POSTFIX}:${GITHUB_SHA}

      - name: Tag and push  director
        if: env.BRANCH_NAME == 'develop'
        run: |
          docker tag ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:${TAG} ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:latest
          docker tag ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:${TAG} ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:${GITHUB_SHA}
          docker push ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:latest
          docker push ${IMAGE_DIRECTOR}${IMAGE_POSTFIX}:${GITHUB_SHA}

      - name: Tag and push  gateway
        if: env.BRANCH_NAME == 'develop'
        run: |
          docker tag ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:${TAG} ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:latest
          docker tag ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:${TAG} ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:${GITHUB_SHA}
          docker push ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:latest
          docker push ${IMAGE_GATEWAY}${IMAGE_POSTFIX}:${GITHUB_SHA}

      - name: Tag and push  assistant
        if: env.BRANCH_NAME == 'develop'
        run: |
          docker tag ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:${TAG} ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:latest
          docker tag ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:${TAG} ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:${GITHUB_SHA}
          docker push ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:latest
          docker push ${IMAGE_ASSISTANT}${IMAGE_POSTFIX}:${GITHUB_SHA}

